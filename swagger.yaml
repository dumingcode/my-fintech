swagger: '2.0'
info:
  description: ''
  version: 1.0.0
  title: 滚雪球后端服务
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: mingdu@foxmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: gunxueqiu.site
basePath: /
tags:
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
schemes:
  - https
  - http
paths:
  /user/saveOptStocks.json:
    post:
      tags:
        - user
      summary: 保存用户选择的自选股代码
      description: 限定登陆用户
      operationId: createUser
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - application/json
      parameters:
        - in: formData
          name: codes
          description: 自选股代码(示例：600030,600177)
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
        403:
          description: "用户未登陆"
  /user/queryOptStocks.json:
    get:
      tags:
        - user
      summary: "查询用户选择的自选股代码列表"
      description: "限定登陆用户"
      operationId: "queryOptStocks"
      produces:
        - application/json
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
        403:
          description: "用户未登陆"
  /user/queryOptGridInfo.json:
    get:
      tags:
        - user
      summary: "查询用户设定指数网格信息"
      description: "限定登陆用户"
      operationId: "queryOptGridInfo"
      produces:
        - application/json
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiGridResponse"
        403:
          description: "用户未登陆"
  /user/saveOptGridInfo.json:
    post:
      tags:
        - user
      summary: "保存用户设置的网格参数信息"
      description: "限定登陆用户"
      operationId: "saveOptGridInfo"
      produces:
        - application/json
      parameters:
      - in: "body"
        name: "body"
        description: "order placed for purchasing the pet"
        required: true
        schema:
          $ref: "#/definitions/optGrid"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiGridResponse"
        403:
          description: "用户未登陆"
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      produces:
        - application/xml
        - application/json
      parameters: []
      responses:
        default:
          description: successful operation
  '/user/{username}':
    get:
      tags:
        - user
      summary: Get user by user name
      description: ''
      operationId: getUserByName
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    put:
      tags:
        - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
    flow: implicit
    scopes:
      'write:pets': modify pets in your account
      'read:pets': read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      optStocks:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
    xml:
      name: User
  optStock:
    type: "object"
    properties:
      _id:
        type: "string"
        example: "用户id"
      stock:
        type: "string"
        example: "600030,002014,000800,300104"
  optGrid:
    type: "object"
    properties:
      _id:
        type: "string"
        example: "用户id"
      code:
        type: "string"
        example: "指数代码（399500）"
      gap:
        type: "string"
        example: "网格每格间距（0-100）"
      low:
        type: "string"
        example: "当前已投最低一格基金价格或者指数点位（4000）"
      user:
        type: "string"
        example: "用户id"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        example: 1
      msg:
        type: "string"
      data:
        type: "array"
        items:
            $ref: "#/definitions/optStock"
  ApiGridResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        example: 1
      msg:
        type: "string"
      data:
        type: "array"
        items:
            $ref: "#/definitions/optGrid"

  
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
